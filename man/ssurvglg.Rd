% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssurvglg.R
\name{ssurvglg}
\alias{ssurvglg}
\title{Fitting semi-parametric generalized log-gamma regression models under the presence of right censored data.}
\usage{
ssurvglg(formula, npc, basis, data, shape, Maxiter, Tolerance)
}
\arguments{
\item{formula}{a symbolic description of the systematic component of the model to be fitted. See details for further information.}

\item{npc}{a data frame with potential nonparametric variables of the systematic part of the model to be fitted.}

\item{basis}{a name of the cubic spline basis to be used in the model. Supported basis include deBoor and Gu basis
which are a B-spline basis and a natural cubic spline basis, respectively.}

\item{data}{an optional data frame, list containing the variables in the model.}

\item{shape}{an optional value for the shape parameter of the model.}

\item{Maxiter}{an optional positive integer giving the maximal number of iterations for the estimating process. Default value is 1e03.}

\item{Tolerance}{an optional positive value, which represents the convergence criterion. Default value is 1e-04.}
}
\value{
mu a vector of parameter estimates asociated with the location parameter.

sigma estimate of the scale parameter associated with the model.

lambda estimate of the shape parameter associated with the model.

interval estimate of a 95\% confidence interval for each estimate parameters associated with the model.

Deviance the deviance associated with the model.
}
\description{
\code{ssurvglg} is used to fit a semi-parametric regression model in which the response variable is continuous, strictly positive, asymmetric and there are right censored observations.
In this setup, the location parameter of the logarithm of the variable is explicitly modeled by semi-parametric functions, whose nonparametric components may be approximated by
natural cubic splines or cubic P-splines.
}
\examples{
rows    <- 150
columns <- 2
t_beta  <- c(0.5, 2)
t_sigma <- 0.75
t_lambda <- 1
set.seed(8142030)
library(ssym)
x1 <- rbinom(rows, 1, 0.5)
x2 <- runif(rows, 0, 1)
X <- cbind(x1,x2)
t_knot1 <- 6
ts1 <- seq(0, 1, length = t_knot1)
t_g1 <- 0.4 * sin(pi * ts1)
BasisN <- function(n, knot) {
N <- matrix(0, n, knot)
m <- n/knot
block <- rep(1,m)
for (i in 1:knot) {
   l <- (i - 1) * m + 1
 r <- i * m
  N[l:r, i] <- block }
return(N)
 }
s_N1 <- BasisN(rows, length(ts1))
x3 <- s_N1 \%*\% ts1
colnames(x3) <- 'x3'
sys       <- X \%*\% t_beta + s_N1\%*\%t_g1
t_ini1    <- exp(sys) * rweibull(rows,1/t_sigma,1)
cens.time <- rweibull(rows, 1.5, 14)
delta     <- ifelse(t_ini1 > cens.time, 1, 0)
obst1 = t_ini1
for(i in 1:rows) {
   if (delta[i] == 1) {
       obst1[i] = cens.time[i]
      }
}
data.example <- data.frame(obst1, delta, X, x3)
fit4  <- ssurvglg(Surv(log(obst1),delta)~ x1 + x2 - 1, npc=x3, data=data.example, shape=0.8)
}
\references{
Carlos A. Cardozo, G. Paula and L. Vanegas. Semi-parametric accelerated failure time models with generalized log-gamma erros: Censored case. In preparation.
}
\author{
Carlos Alberto Cardozo Delgado <cardozorpackages@gmail.com>, G. Paula and L. Vanegas.
}
